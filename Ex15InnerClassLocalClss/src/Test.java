//아우터 클래스
public class Test {
	
	int a=100;
	
	//멤버 메소드
	void show() {
		System.out.println("Test!"+a);
//		k=100; //아우터는 이너를 맘대로 사용 안댐
	}
	
	//이너클래스 객체를 만들어서, 외부로 리턴시켜주는 메소드.
	Nice makeInnerClassObject() {
		Nice n= new Nice(); //아우터클래스는 이너클래스를 객체로 만들 수 있음
		return n; //외부에서 쓸 수 있게 하자
	}
	
	
	
	//클래스 안에 또 클래스
	//inner class라고 부름- 이 이너클래스를 감싸는 클래스를 아우터클래스라고 부른다.
	//이너클래스의 특징
	//1. 이너클래스는 외부(아우터클래스 밖!)에서 아우터 클래스 명 없이는 인식 불가
	//2. ***아우터클래스 명을 이용하여 인식이 되더라도 객체 생성은 불가능!***
	//3. 이너 클래스는 아우터 클래스만 객체 생성 가능!
	
	//4. 이너클래스 안에서는 아우터클래스 멤버들을 본인것처럼 사용 가능
	//4.1 아우터에서는 이너의 멤버를 사용할 수 없음
	
	// => 이너클래스 사용 목적: 객체를 안전하게 만들기 위해.
	// 즉, 외부에서 마음대로 객체생성하여 사용하는 것을 막기 위해
	// 따라서 아우터 클래스만 이너클래스 객체를 사용하는 환경을 위해서!
	
	
	class Nice{
		
		int k= 20; //멤버변수
		
		//멤버 메소드
		void aaa() {
			a= 10; //아우터의 멤버를 내것처럼 사용함 
			System.out.println("Nice!!"+k);
			System.out.println("Nice!"+a);
			
			//아우터의 메소드도 내것처럼!
			show();
		}
		
	}//Nice class end.
	
	
	
	
	
	
	
	
	
}
